/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.omg.space.xtce.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import org.omg.space.xtce.util.XtceAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class XtceItemProviderAdapterFactory extends XtceAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public XtceItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.AbsoluteTimeDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AbsoluteTimeDataTypeItemProvider absoluteTimeDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.AbsoluteTimeDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAbsoluteTimeDataTypeAdapter() {
		if (absoluteTimeDataTypeItemProvider == null) {
			absoluteTimeDataTypeItemProvider = new AbsoluteTimeDataTypeItemProvider(this);
		}

		return absoluteTimeDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.AcceptedVerifierType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AcceptedVerifierTypeItemProvider acceptedVerifierTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.AcceptedVerifierType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAcceptedVerifierTypeAdapter() {
		if (acceptedVerifierTypeItemProvider == null) {
			acceptedVerifierTypeItemProvider = new AcceptedVerifierTypeItemProvider(this);
		}

		return acceptedVerifierTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.AlarmConditionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlarmConditionsTypeItemProvider alarmConditionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.AlarmConditionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlarmConditionsTypeAdapter() {
		if (alarmConditionsTypeItemProvider == null) {
			alarmConditionsTypeItemProvider = new AlarmConditionsTypeItemProvider(this);
		}

		return alarmConditionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.AlarmRangesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlarmRangesTypeItemProvider alarmRangesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.AlarmRangesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlarmRangesTypeAdapter() {
		if (alarmRangesTypeItemProvider == null) {
			alarmRangesTypeItemProvider = new AlarmRangesTypeItemProvider(this);
		}

		return alarmRangesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.AlgorithmSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlgorithmSetTypeItemProvider algorithmSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.AlgorithmSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlgorithmSetTypeAdapter() {
		if (algorithmSetTypeItemProvider == null) {
			algorithmSetTypeItemProvider = new AlgorithmSetTypeItemProvider(this);
		}

		return algorithmSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.AlgorithmTextType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AlgorithmTextTypeItemProvider algorithmTextTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.AlgorithmTextType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAlgorithmTextTypeAdapter() {
		if (algorithmTextTypeItemProvider == null) {
			algorithmTextTypeItemProvider = new AlgorithmTextTypeItemProvider(this);
		}

		return algorithmTextTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.AliasSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AliasSetTypeItemProvider aliasSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.AliasSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAliasSetTypeAdapter() {
		if (aliasSetTypeItemProvider == null) {
			aliasSetTypeItemProvider = new AliasSetTypeItemProvider(this);
		}

		return aliasSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.AliasType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AliasTypeItemProvider aliasTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.AliasType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAliasTypeAdapter() {
		if (aliasTypeItemProvider == null) {
			aliasTypeItemProvider = new AliasTypeItemProvider(this);
		}

		return aliasTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ANDedConditionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ANDedConditionsTypeItemProvider anDedConditionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ANDedConditionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createANDedConditionsTypeAdapter() {
		if (anDedConditionsTypeItemProvider == null) {
			anDedConditionsTypeItemProvider = new ANDedConditionsTypeItemProvider(this);
		}

		return anDedConditionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ArgumementArrayTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumementArrayTypeTypeItemProvider argumementArrayTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ArgumementArrayTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgumementArrayTypeTypeAdapter() {
		if (argumementArrayTypeTypeItemProvider == null) {
			argumementArrayTypeTypeItemProvider = new ArgumementArrayTypeTypeItemProvider(this);
		}

		return argumementArrayTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ArgumentAssignmentListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumentAssignmentListTypeItemProvider argumentAssignmentListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ArgumentAssignmentListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgumentAssignmentListTypeAdapter() {
		if (argumentAssignmentListTypeItemProvider == null) {
			argumentAssignmentListTypeItemProvider = new ArgumentAssignmentListTypeItemProvider(this);
		}

		return argumentAssignmentListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ArgumentAssignmentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumentAssignmentTypeItemProvider argumentAssignmentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ArgumentAssignmentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgumentAssignmentTypeAdapter() {
		if (argumentAssignmentTypeItemProvider == null) {
			argumentAssignmentTypeItemProvider = new ArgumentAssignmentTypeItemProvider(this);
		}

		return argumentAssignmentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ArgumentListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumentListTypeItemProvider argumentListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ArgumentListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgumentListTypeAdapter() {
		if (argumentListTypeItemProvider == null) {
			argumentListTypeItemProvider = new ArgumentListTypeItemProvider(this);
		}

		return argumentListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ArgumentListType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumentListType1ItemProvider argumentListType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ArgumentListType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgumentListType1Adapter() {
		if (argumentListType1ItemProvider == null) {
			argumentListType1ItemProvider = new ArgumentListType1ItemProvider(this);
		}

		return argumentListType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ArgumentRefEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumentRefEntryTypeItemProvider argumentRefEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ArgumentRefEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgumentRefEntryTypeAdapter() {
		if (argumentRefEntryTypeItemProvider == null) {
			argumentRefEntryTypeItemProvider = new ArgumentRefEntryTypeItemProvider(this);
		}

		return argumentRefEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ArgumentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumentTypeItemProvider argumentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ArgumentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgumentTypeAdapter() {
		if (argumentTypeItemProvider == null) {
			argumentTypeItemProvider = new ArgumentTypeItemProvider(this);
		}

		return argumentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ArgumentType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumentType1ItemProvider argumentType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ArgumentType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgumentType1Adapter() {
		if (argumentType1ItemProvider == null) {
			argumentType1ItemProvider = new ArgumentType1ItemProvider(this);
		}

		return argumentType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ArgumentTypeSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArgumentTypeSetTypeItemProvider argumentTypeSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ArgumentTypeSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArgumentTypeSetTypeAdapter() {
		if (argumentTypeSetTypeItemProvider == null) {
			argumentTypeSetTypeItemProvider = new ArgumentTypeSetTypeItemProvider(this);
		}

		return argumentTypeSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ArrayParameterRefEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayParameterRefEntryTypeItemProvider arrayParameterRefEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ArrayParameterRefEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayParameterRefEntryTypeAdapter() {
		if (arrayParameterRefEntryTypeItemProvider == null) {
			arrayParameterRefEntryTypeItemProvider = new ArrayParameterRefEntryTypeItemProvider(this);
		}

		return arrayParameterRefEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ArrayParameterTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ArrayParameterTypeTypeItemProvider arrayParameterTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ArrayParameterTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createArrayParameterTypeTypeAdapter() {
		if (arrayParameterTypeTypeItemProvider == null) {
			arrayParameterTypeTypeItemProvider = new ArrayParameterTypeTypeItemProvider(this);
		}

		return arrayParameterTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.AuthorSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AuthorSetTypeItemProvider authorSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.AuthorSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAuthorSetTypeAdapter() {
		if (authorSetTypeItemProvider == null) {
			authorSetTypeItemProvider = new AuthorSetTypeItemProvider(this);
		}

		return authorSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.AutoInvertType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AutoInvertTypeItemProvider autoInvertTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.AutoInvertType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAutoInvertTypeAdapter() {
		if (autoInvertTypeItemProvider == null) {
			autoInvertTypeItemProvider = new AutoInvertTypeItemProvider(this);
		}

		return autoInvertTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.BaseContainerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseContainerTypeItemProvider baseContainerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.BaseContainerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseContainerTypeAdapter() {
		if (baseContainerTypeItemProvider == null) {
			baseContainerTypeItemProvider = new BaseContainerTypeItemProvider(this);
		}

		return baseContainerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.BaseContainerType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseContainerType1ItemProvider baseContainerType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.BaseContainerType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseContainerType1Adapter() {
		if (baseContainerType1ItemProvider == null) {
			baseContainerType1ItemProvider = new BaseContainerType1ItemProvider(this);
		}

		return baseContainerType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.BaseMetaCommandType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BaseMetaCommandTypeItemProvider baseMetaCommandTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.BaseMetaCommandType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBaseMetaCommandTypeAdapter() {
		if (baseMetaCommandTypeItemProvider == null) {
			baseMetaCommandTypeItemProvider = new BaseMetaCommandTypeItemProvider(this);
		}

		return baseMetaCommandTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.BinaryDataEncodingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryDataEncodingTypeItemProvider binaryDataEncodingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.BinaryDataEncodingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryDataEncodingTypeAdapter() {
		if (binaryDataEncodingTypeItemProvider == null) {
			binaryDataEncodingTypeItemProvider = new BinaryDataEncodingTypeItemProvider(this);
		}

		return binaryDataEncodingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.BinaryDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BinaryDataTypeItemProvider binaryDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.BinaryDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBinaryDataTypeAdapter() {
		if (binaryDataTypeItemProvider == null) {
			binaryDataTypeItemProvider = new BinaryDataTypeItemProvider(this);
		}

		return binaryDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.BlockMetaCommandType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BlockMetaCommandTypeItemProvider blockMetaCommandTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.BlockMetaCommandType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBlockMetaCommandTypeAdapter() {
		if (blockMetaCommandTypeItemProvider == null) {
			blockMetaCommandTypeItemProvider = new BlockMetaCommandTypeItemProvider(this);
		}

		return blockMetaCommandTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.BooleanDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanDataTypeItemProvider booleanDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.BooleanDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanDataTypeAdapter() {
		if (booleanDataTypeItemProvider == null) {
			booleanDataTypeItemProvider = new BooleanDataTypeItemProvider(this);
		}

		return booleanDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.BooleanExpressionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanExpressionTypeItemProvider booleanExpressionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.BooleanExpressionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanExpressionTypeAdapter() {
		if (booleanExpressionTypeItemProvider == null) {
			booleanExpressionTypeItemProvider = new BooleanExpressionTypeItemProvider(this);
		}

		return booleanExpressionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ByteOrderType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ByteOrderTypeItemProvider byteOrderTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ByteOrderType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createByteOrderTypeAdapter() {
		if (byteOrderTypeItemProvider == null) {
			byteOrderTypeItemProvider = new ByteOrderTypeItemProvider(this);
		}

		return byteOrderTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ByteType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ByteTypeItemProvider byteTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ByteType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createByteTypeAdapter() {
		if (byteTypeItemProvider == null) {
			byteTypeItemProvider = new ByteTypeItemProvider(this);
		}

		return byteTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.CalibratorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalibratorTypeItemProvider calibratorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.CalibratorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalibratorTypeAdapter() {
		if (calibratorTypeItemProvider == null) {
			calibratorTypeItemProvider = new CalibratorTypeItemProvider(this);
		}

		return calibratorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ChangeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChangeTypeItemProvider changeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ChangeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createChangeTypeAdapter() {
		if (changeTypeItemProvider == null) {
			changeTypeItemProvider = new ChangeTypeItemProvider(this);
		}

		return changeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.CommandContainerEntryListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandContainerEntryListTypeItemProvider commandContainerEntryListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.CommandContainerEntryListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommandContainerEntryListTypeAdapter() {
		if (commandContainerEntryListTypeItemProvider == null) {
			commandContainerEntryListTypeItemProvider = new CommandContainerEntryListTypeItemProvider(this);
		}

		return commandContainerEntryListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.CommandContainerSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandContainerSetTypeItemProvider commandContainerSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.CommandContainerSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommandContainerSetTypeAdapter() {
		if (commandContainerSetTypeItemProvider == null) {
			commandContainerSetTypeItemProvider = new CommandContainerSetTypeItemProvider(this);
		}

		return commandContainerSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.CommandContainerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandContainerTypeItemProvider commandContainerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.CommandContainerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommandContainerTypeAdapter() {
		if (commandContainerTypeItemProvider == null) {
			commandContainerTypeItemProvider = new CommandContainerTypeItemProvider(this);
		}

		return commandContainerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.CommandMetaDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandMetaDataTypeItemProvider commandMetaDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.CommandMetaDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommandMetaDataTypeAdapter() {
		if (commandMetaDataTypeItemProvider == null) {
			commandMetaDataTypeItemProvider = new CommandMetaDataTypeItemProvider(this);
		}

		return commandMetaDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.CommandVerifierType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandVerifierTypeItemProvider commandVerifierTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.CommandVerifierType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommandVerifierTypeAdapter() {
		if (commandVerifierTypeItemProvider == null) {
			commandVerifierTypeItemProvider = new CommandVerifierTypeItemProvider(this);
		}

		return commandVerifierTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ComparisonCheckType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComparisonCheckTypeItemProvider comparisonCheckTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ComparisonCheckType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComparisonCheckTypeAdapter() {
		if (comparisonCheckTypeItemProvider == null) {
			comparisonCheckTypeItemProvider = new ComparisonCheckTypeItemProvider(this);
		}

		return comparisonCheckTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ComparisonListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComparisonListTypeItemProvider comparisonListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ComparisonListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComparisonListTypeAdapter() {
		if (comparisonListTypeItemProvider == null) {
			comparisonListTypeItemProvider = new ComparisonListTypeItemProvider(this);
		}

		return comparisonListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ComparisonListType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComparisonListType1ItemProvider comparisonListType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ComparisonListType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComparisonListType1Adapter() {
		if (comparisonListType1ItemProvider == null) {
			comparisonListType1ItemProvider = new ComparisonListType1ItemProvider(this);
		}

		return comparisonListType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ComparisonType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComparisonTypeItemProvider comparisonTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ComparisonType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createComparisonTypeAdapter() {
		if (comparisonTypeItemProvider == null) {
			comparisonTypeItemProvider = new ComparisonTypeItemProvider(this);
		}

		return comparisonTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.CompleteVerifierType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CompleteVerifierTypeItemProvider completeVerifierTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.CompleteVerifierType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCompleteVerifierTypeAdapter() {
		if (completeVerifierTypeItemProvider == null) {
			completeVerifierTypeItemProvider = new CompleteVerifierTypeItemProvider(this);
		}

		return completeVerifierTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ConditionalAlarmType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConditionalAlarmTypeItemProvider conditionalAlarmTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ConditionalAlarmType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConditionalAlarmTypeAdapter() {
		if (conditionalAlarmTypeItemProvider == null) {
			conditionalAlarmTypeItemProvider = new ConditionalAlarmTypeItemProvider(this);
		}

		return conditionalAlarmTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ConstantType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ConstantTypeItemProvider constantTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ConstantType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createConstantTypeAdapter() {
		if (constantTypeItemProvider == null) {
			constantTypeItemProvider = new ConstantTypeItemProvider(this);
		}

		return constantTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContainerRefEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainerRefEntryTypeItemProvider containerRefEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContainerRefEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainerRefEntryTypeAdapter() {
		if (containerRefEntryTypeItemProvider == null) {
			containerRefEntryTypeItemProvider = new ContainerRefEntryTypeItemProvider(this);
		}

		return containerRefEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContainerRefSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainerRefSetTypeItemProvider containerRefSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContainerRefSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainerRefSetTypeAdapter() {
		if (containerRefSetTypeItemProvider == null) {
			containerRefSetTypeItemProvider = new ContainerRefSetTypeItemProvider(this);
		}

		return containerRefSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContainerRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainerRefTypeItemProvider containerRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContainerRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainerRefTypeAdapter() {
		if (containerRefTypeItemProvider == null) {
			containerRefTypeItemProvider = new ContainerRefTypeItemProvider(this);
		}

		return containerRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContainerSegmentRefEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainerSegmentRefEntryTypeItemProvider containerSegmentRefEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContainerSegmentRefEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainerSegmentRefEntryTypeAdapter() {
		if (containerSegmentRefEntryTypeItemProvider == null) {
			containerSegmentRefEntryTypeItemProvider = new ContainerSegmentRefEntryTypeItemProvider(this);
		}

		return containerSegmentRefEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContainerSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContainerSetTypeItemProvider containerSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContainerSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContainerSetTypeAdapter() {
		if (containerSetTypeItemProvider == null) {
			containerSetTypeItemProvider = new ContainerSetTypeItemProvider(this);
		}

		return containerSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextAlarmListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextAlarmListTypeItemProvider contextAlarmListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextAlarmListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextAlarmListTypeAdapter() {
		if (contextAlarmListTypeItemProvider == null) {
			contextAlarmListTypeItemProvider = new ContextAlarmListTypeItemProvider(this);
		}

		return contextAlarmListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextAlarmListType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextAlarmListType1ItemProvider contextAlarmListType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextAlarmListType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextAlarmListType1Adapter() {
		if (contextAlarmListType1ItemProvider == null) {
			contextAlarmListType1ItemProvider = new ContextAlarmListType1ItemProvider(this);
		}

		return contextAlarmListType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextAlarmListType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextAlarmListType2ItemProvider contextAlarmListType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextAlarmListType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextAlarmListType2Adapter() {
		if (contextAlarmListType2ItemProvider == null) {
			contextAlarmListType2ItemProvider = new ContextAlarmListType2ItemProvider(this);
		}

		return contextAlarmListType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextAlarmListType3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextAlarmListType3ItemProvider contextAlarmListType3ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextAlarmListType3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextAlarmListType3Adapter() {
		if (contextAlarmListType3ItemProvider == null) {
			contextAlarmListType3ItemProvider = new ContextAlarmListType3ItemProvider(this);
		}

		return contextAlarmListType3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextAlarmType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextAlarmTypeItemProvider contextAlarmTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextAlarmType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextAlarmTypeAdapter() {
		if (contextAlarmTypeItemProvider == null) {
			contextAlarmTypeItemProvider = new ContextAlarmTypeItemProvider(this);
		}

		return contextAlarmTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextCalibratorListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextCalibratorListTypeItemProvider contextCalibratorListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextCalibratorListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextCalibratorListTypeAdapter() {
		if (contextCalibratorListTypeItemProvider == null) {
			contextCalibratorListTypeItemProvider = new ContextCalibratorListTypeItemProvider(this);
		}

		return contextCalibratorListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextCalibratorListType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextCalibratorListType1ItemProvider contextCalibratorListType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextCalibratorListType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextCalibratorListType1Adapter() {
		if (contextCalibratorListType1ItemProvider == null) {
			contextCalibratorListType1ItemProvider = new ContextCalibratorListType1ItemProvider(this);
		}

		return contextCalibratorListType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextCalibratorListType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextCalibratorListType2ItemProvider contextCalibratorListType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextCalibratorListType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextCalibratorListType2Adapter() {
		if (contextCalibratorListType2ItemProvider == null) {
			contextCalibratorListType2ItemProvider = new ContextCalibratorListType2ItemProvider(this);
		}

		return contextCalibratorListType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextCalibratorListType3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextCalibratorListType3ItemProvider contextCalibratorListType3ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextCalibratorListType3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextCalibratorListType3Adapter() {
		if (contextCalibratorListType3ItemProvider == null) {
			contextCalibratorListType3ItemProvider = new ContextCalibratorListType3ItemProvider(this);
		}

		return contextCalibratorListType3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextCalibratorListType4} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextCalibratorListType4ItemProvider contextCalibratorListType4ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextCalibratorListType4}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextCalibratorListType4Adapter() {
		if (contextCalibratorListType4ItemProvider == null) {
			contextCalibratorListType4ItemProvider = new ContextCalibratorListType4ItemProvider(this);
		}

		return contextCalibratorListType4ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextCalibratorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextCalibratorTypeItemProvider contextCalibratorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextCalibratorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextCalibratorTypeAdapter() {
		if (contextCalibratorTypeItemProvider == null) {
			contextCalibratorTypeItemProvider = new ContextCalibratorTypeItemProvider(this);
		}

		return contextCalibratorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextCalibratorType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextCalibratorType1ItemProvider contextCalibratorType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextCalibratorType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextCalibratorType1Adapter() {
		if (contextCalibratorType1ItemProvider == null) {
			contextCalibratorType1ItemProvider = new ContextCalibratorType1ItemProvider(this);
		}

		return contextCalibratorType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextCalibratorType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextCalibratorType2ItemProvider contextCalibratorType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextCalibratorType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextCalibratorType2Adapter() {
		if (contextCalibratorType2ItemProvider == null) {
			contextCalibratorType2ItemProvider = new ContextCalibratorType2ItemProvider(this);
		}

		return contextCalibratorType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextCalibratorType3} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextCalibratorType3ItemProvider contextCalibratorType3ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextCalibratorType3}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextCalibratorType3Adapter() {
		if (contextCalibratorType3ItemProvider == null) {
			contextCalibratorType3ItemProvider = new ContextCalibratorType3ItemProvider(this);
		}

		return contextCalibratorType3ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextSignificanceListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextSignificanceListTypeItemProvider contextSignificanceListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextSignificanceListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextSignificanceListTypeAdapter() {
		if (contextSignificanceListTypeItemProvider == null) {
			contextSignificanceListTypeItemProvider = new ContextSignificanceListTypeItemProvider(this);
		}

		return contextSignificanceListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ContextSignificanceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ContextSignificanceTypeItemProvider contextSignificanceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ContextSignificanceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createContextSignificanceTypeAdapter() {
		if (contextSignificanceTypeItemProvider == null) {
			contextSignificanceTypeItemProvider = new ContextSignificanceTypeItemProvider(this);
		}

		return contextSignificanceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.CRCType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CRCTypeItemProvider crcTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.CRCType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCRCTypeAdapter() {
		if (crcTypeItemProvider == null) {
			crcTypeItemProvider = new CRCTypeItemProvider(this);
		}

		return crcTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.CustomStreamType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CustomStreamTypeItemProvider customStreamTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.CustomStreamType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCustomStreamTypeAdapter() {
		if (customStreamTypeItemProvider == null) {
			customStreamTypeItemProvider = new CustomStreamTypeItemProvider(this);
		}

		return customStreamTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.DataEncodingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DataEncodingTypeItemProvider dataEncodingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.DataEncodingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDataEncodingTypeAdapter() {
		if (dataEncodingTypeItemProvider == null) {
			dataEncodingTypeItemProvider = new DataEncodingTypeItemProvider(this);
		}

		return dataEncodingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.DecimalRangeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecimalRangeTypeItemProvider decimalRangeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.DecimalRangeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecimalRangeTypeAdapter() {
		if (decimalRangeTypeItemProvider == null) {
			decimalRangeTypeItemProvider = new DecimalRangeTypeItemProvider(this);
		}

		return decimalRangeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.DecimalValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DecimalValueTypeItemProvider decimalValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.DecimalValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDecimalValueTypeAdapter() {
		if (decimalValueTypeItemProvider == null) {
			decimalValueTypeItemProvider = new DecimalValueTypeItemProvider(this);
		}

		return decimalValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.DefaultsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefaultsTypeItemProvider defaultsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.DefaultsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefaultsTypeAdapter() {
		if (defaultsTypeItemProvider == null) {
			defaultsTypeItemProvider = new DefaultsTypeItemProvider(this);
		}

		return defaultsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.DimensionListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionListTypeItemProvider dimensionListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.DimensionListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionListTypeAdapter() {
		if (dimensionListTypeItemProvider == null) {
			dimensionListTypeItemProvider = new DimensionListTypeItemProvider(this);
		}

		return dimensionListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.DimensionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DimensionTypeItemProvider dimensionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.DimensionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDimensionTypeAdapter() {
		if (dimensionTypeItemProvider == null) {
			dimensionTypeItemProvider = new DimensionTypeItemProvider(this);
		}

		return dimensionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.DiscreteLookupListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiscreteLookupListTypeItemProvider discreteLookupListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.DiscreteLookupListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiscreteLookupListTypeAdapter() {
		if (discreteLookupListTypeItemProvider == null) {
			discreteLookupListTypeItemProvider = new DiscreteLookupListTypeItemProvider(this);
		}

		return discreteLookupListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.DiscreteLookupType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DiscreteLookupTypeItemProvider discreteLookupTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.DiscreteLookupType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDiscreteLookupTypeAdapter() {
		if (discreteLookupTypeItemProvider == null) {
			discreteLookupTypeItemProvider = new DiscreteLookupTypeItemProvider(this);
		}

		return discreteLookupTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.DocumentRoot} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DocumentRootItemProvider documentRootItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.DocumentRoot}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDocumentRootAdapter() {
		if (documentRootItemProvider == null) {
			documentRootItemProvider = new DocumentRootItemProvider(this);
		}

		return documentRootItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.DynamicValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicValueTypeItemProvider dynamicValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.DynamicValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicValueTypeAdapter() {
		if (dynamicValueTypeItemProvider == null) {
			dynamicValueTypeItemProvider = new DynamicValueTypeItemProvider(this);
		}

		return dynamicValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.DynamicValueType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DynamicValueType1ItemProvider dynamicValueType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.DynamicValueType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDynamicValueType1Adapter() {
		if (dynamicValueType1ItemProvider == null) {
			dynamicValueType1ItemProvider = new DynamicValueType1ItemProvider(this);
		}

		return dynamicValueType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.EncodingType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EncodingType1ItemProvider encodingType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.EncodingType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEncodingType1Adapter() {
		if (encodingType1ItemProvider == null) {
			encodingType1ItemProvider = new EncodingType1ItemProvider(this);
		}

		return encodingType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.EntryListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntryListTypeItemProvider entryListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.EntryListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntryListTypeAdapter() {
		if (entryListTypeItemProvider == null) {
			entryListTypeItemProvider = new EntryListTypeItemProvider(this);
		}

		return entryListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.EnumeratedDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumeratedDataTypeItemProvider enumeratedDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.EnumeratedDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumeratedDataTypeAdapter() {
		if (enumeratedDataTypeItemProvider == null) {
			enumeratedDataTypeItemProvider = new EnumeratedDataTypeItemProvider(this);
		}

		return enumeratedDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.EnumerationListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumerationListTypeItemProvider enumerationListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.EnumerationListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumerationListTypeAdapter() {
		if (enumerationListTypeItemProvider == null) {
			enumerationListTypeItemProvider = new EnumerationListTypeItemProvider(this);
		}

		return enumerationListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ErrorDetectCorrectType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ErrorDetectCorrectTypeItemProvider errorDetectCorrectTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ErrorDetectCorrectType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createErrorDetectCorrectTypeAdapter() {
		if (errorDetectCorrectTypeItemProvider == null) {
			errorDetectCorrectTypeItemProvider = new ErrorDetectCorrectTypeItemProvider(this);
		}

		return errorDetectCorrectTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ExecutionVerifierType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExecutionVerifierTypeItemProvider executionVerifierTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ExecutionVerifierType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExecutionVerifierTypeAdapter() {
		if (executionVerifierTypeItemProvider == null) {
			executionVerifierTypeItemProvider = new ExecutionVerifierTypeItemProvider(this);
		}

		return executionVerifierTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ExternalAlgorithmSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalAlgorithmSetTypeItemProvider externalAlgorithmSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ExternalAlgorithmSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalAlgorithmSetTypeAdapter() {
		if (externalAlgorithmSetTypeItemProvider == null) {
			externalAlgorithmSetTypeItemProvider = new ExternalAlgorithmSetTypeItemProvider(this);
		}

		return externalAlgorithmSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ExternalAlgorithmType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ExternalAlgorithmTypeItemProvider externalAlgorithmTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ExternalAlgorithmType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createExternalAlgorithmTypeAdapter() {
		if (externalAlgorithmTypeItemProvider == null) {
			externalAlgorithmTypeItemProvider = new ExternalAlgorithmTypeItemProvider(this);
		}

		return externalAlgorithmTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.FixedFrameStreamType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FixedFrameStreamTypeItemProvider fixedFrameStreamTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.FixedFrameStreamType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFixedFrameStreamTypeAdapter() {
		if (fixedFrameStreamTypeItemProvider == null) {
			fixedFrameStreamTypeItemProvider = new FixedFrameStreamTypeItemProvider(this);
		}

		return fixedFrameStreamTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.FixedFrameSyncStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FixedFrameSyncStrategyTypeItemProvider fixedFrameSyncStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.FixedFrameSyncStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFixedFrameSyncStrategyTypeAdapter() {
		if (fixedFrameSyncStrategyTypeItemProvider == null) {
			fixedFrameSyncStrategyTypeItemProvider = new FixedFrameSyncStrategyTypeItemProvider(this);
		}

		return fixedFrameSyncStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.FixedValueEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FixedValueEntryTypeItemProvider fixedValueEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.FixedValueEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFixedValueEntryTypeAdapter() {
		if (fixedValueEntryTypeItemProvider == null) {
			fixedValueEntryTypeItemProvider = new FixedValueEntryTypeItemProvider(this);
		}

		return fixedValueEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.FlagType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FlagTypeItemProvider flagTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.FlagType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFlagTypeAdapter() {
		if (flagTypeItemProvider == null) {
			flagTypeItemProvider = new FlagTypeItemProvider(this);
		}

		return flagTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.FloatArgumentTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloatArgumentTypeTypeItemProvider floatArgumentTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.FloatArgumentTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloatArgumentTypeTypeAdapter() {
		if (floatArgumentTypeTypeItemProvider == null) {
			floatArgumentTypeTypeItemProvider = new FloatArgumentTypeTypeItemProvider(this);
		}

		return floatArgumentTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.FloatDataEncodingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloatDataEncodingTypeItemProvider floatDataEncodingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.FloatDataEncodingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloatDataEncodingTypeAdapter() {
		if (floatDataEncodingTypeItemProvider == null) {
			floatDataEncodingTypeItemProvider = new FloatDataEncodingTypeItemProvider(this);
		}

		return floatDataEncodingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.FloatDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloatDataTypeItemProvider floatDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.FloatDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloatDataTypeAdapter() {
		if (floatDataTypeItemProvider == null) {
			floatDataTypeItemProvider = new FloatDataTypeItemProvider(this);
		}

		return floatDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.FloatParameterTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FloatParameterTypeTypeItemProvider floatParameterTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.FloatParameterTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFloatParameterTypeTypeAdapter() {
		if (floatParameterTypeTypeItemProvider == null) {
			floatParameterTypeTypeItemProvider = new FloatParameterTypeTypeItemProvider(this);
		}

		return floatParameterTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.FrameStreamType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FrameStreamTypeItemProvider frameStreamTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.FrameStreamType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFrameStreamTypeAdapter() {
		if (frameStreamTypeItemProvider == null) {
			frameStreamTypeItemProvider = new FrameStreamTypeItemProvider(this);
		}

		return frameStreamTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.HeaderType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HeaderTypeItemProvider headerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.HeaderType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHeaderTypeAdapter() {
		if (headerTypeItemProvider == null) {
			headerTypeItemProvider = new HeaderTypeItemProvider(this);
		}

		return headerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.HistorySetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HistorySetTypeItemProvider historySetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.HistorySetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHistorySetTypeAdapter() {
		if (historySetTypeItemProvider == null) {
			historySetTypeItemProvider = new HistorySetTypeItemProvider(this);
		}

		return historySetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.IndirectParameterRefEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IndirectParameterRefEntryTypeItemProvider indirectParameterRefEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.IndirectParameterRefEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIndirectParameterRefEntryTypeAdapter() {
		if (indirectParameterRefEntryTypeItemProvider == null) {
			indirectParameterRefEntryTypeItemProvider = new IndirectParameterRefEntryTypeItemProvider(this);
		}

		return indirectParameterRefEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.InputAlgorithmType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputAlgorithmTypeItemProvider inputAlgorithmTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.InputAlgorithmType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputAlgorithmTypeAdapter() {
		if (inputAlgorithmTypeItemProvider == null) {
			inputAlgorithmTypeItemProvider = new InputAlgorithmTypeItemProvider(this);
		}

		return inputAlgorithmTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.InputOutputAlgorithmType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputOutputAlgorithmTypeItemProvider inputOutputAlgorithmTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.InputOutputAlgorithmType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputOutputAlgorithmTypeAdapter() {
		if (inputOutputAlgorithmTypeItemProvider == null) {
			inputOutputAlgorithmTypeItemProvider = new InputOutputAlgorithmTypeItemProvider(this);
		}

		return inputOutputAlgorithmTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.InputOutputTriggerAlgorithmType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputOutputTriggerAlgorithmTypeItemProvider inputOutputTriggerAlgorithmTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.InputOutputTriggerAlgorithmType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputOutputTriggerAlgorithmTypeAdapter() {
		if (inputOutputTriggerAlgorithmTypeItemProvider == null) {
			inputOutputTriggerAlgorithmTypeItemProvider = new InputOutputTriggerAlgorithmTypeItemProvider(this);
		}

		return inputOutputTriggerAlgorithmTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.InputSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InputSetTypeItemProvider inputSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.InputSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInputSetTypeAdapter() {
		if (inputSetTypeItemProvider == null) {
			inputSetTypeItemProvider = new InputSetTypeItemProvider(this);
		}

		return inputSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.IntegerArgumentTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerArgumentTypeTypeItemProvider integerArgumentTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.IntegerArgumentTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerArgumentTypeTypeAdapter() {
		if (integerArgumentTypeTypeItemProvider == null) {
			integerArgumentTypeTypeItemProvider = new IntegerArgumentTypeTypeItemProvider(this);
		}

		return integerArgumentTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.IntegerDataEncodingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerDataEncodingTypeItemProvider integerDataEncodingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.IntegerDataEncodingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerDataEncodingTypeAdapter() {
		if (integerDataEncodingTypeItemProvider == null) {
			integerDataEncodingTypeItemProvider = new IntegerDataEncodingTypeItemProvider(this);
		}

		return integerDataEncodingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.IntegerDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerDataTypeItemProvider integerDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.IntegerDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerDataTypeAdapter() {
		if (integerDataTypeItemProvider == null) {
			integerDataTypeItemProvider = new IntegerDataTypeItemProvider(this);
		}

		return integerDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.IntegerParameterTypeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerParameterTypeTypeItemProvider integerParameterTypeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.IntegerParameterTypeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerParameterTypeTypeAdapter() {
		if (integerParameterTypeTypeItemProvider == null) {
			integerParameterTypeTypeItemProvider = new IntegerParameterTypeTypeItemProvider(this);
		}

		return integerParameterTypeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.IntegerRangeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerRangeTypeItemProvider integerRangeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.IntegerRangeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerRangeTypeAdapter() {
		if (integerRangeTypeItemProvider == null) {
			integerRangeTypeItemProvider = new IntegerRangeTypeItemProvider(this);
		}

		return integerRangeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.IntegerValueType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerValueTypeItemProvider integerValueTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.IntegerValueType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerValueTypeAdapter() {
		if (integerValueTypeItemProvider == null) {
			integerValueTypeItemProvider = new IntegerValueTypeItemProvider(this);
		}

		return integerValueTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.InterlockType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InterlockTypeItemProvider interlockTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.InterlockType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInterlockTypeAdapter() {
		if (interlockTypeItemProvider == null) {
			interlockTypeItemProvider = new InterlockTypeItemProvider(this);
		}

		return interlockTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.LeadingSizeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LeadingSizeTypeItemProvider leadingSizeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.LeadingSizeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLeadingSizeTypeAdapter() {
		if (leadingSizeTypeItemProvider == null) {
			leadingSizeTypeItemProvider = new LeadingSizeTypeItemProvider(this);
		}

		return leadingSizeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.LinearAdjustmentType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearAdjustmentTypeItemProvider linearAdjustmentTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.LinearAdjustmentType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearAdjustmentTypeAdapter() {
		if (linearAdjustmentTypeItemProvider == null) {
			linearAdjustmentTypeItemProvider = new LinearAdjustmentTypeItemProvider(this);
		}

		return linearAdjustmentTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.LinearAdjustmentType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LinearAdjustmentType1ItemProvider linearAdjustmentType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.LinearAdjustmentType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLinearAdjustmentType1Adapter() {
		if (linearAdjustmentType1ItemProvider == null) {
			linearAdjustmentType1ItemProvider = new LinearAdjustmentType1ItemProvider(this);
		}

		return linearAdjustmentType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.LocationInContainerInBitsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LocationInContainerInBitsTypeItemProvider locationInContainerInBitsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.LocationInContainerInBitsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLocationInContainerInBitsTypeAdapter() {
		if (locationInContainerInBitsTypeItemProvider == null) {
			locationInContainerInBitsTypeItemProvider = new LocationInContainerInBitsTypeItemProvider(this);
		}

		return locationInContainerInBitsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.MatchCriteriaType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MatchCriteriaTypeItemProvider matchCriteriaTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.MatchCriteriaType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMatchCriteriaTypeAdapter() {
		if (matchCriteriaTypeItemProvider == null) {
			matchCriteriaTypeItemProvider = new MatchCriteriaTypeItemProvider(this);
		}

		return matchCriteriaTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.MathAlgorithmType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MathAlgorithmTypeItemProvider mathAlgorithmTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.MathAlgorithmType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMathAlgorithmTypeAdapter() {
		if (mathAlgorithmTypeItemProvider == null) {
			mathAlgorithmTypeItemProvider = new MathAlgorithmTypeItemProvider(this);
		}

		return mathAlgorithmTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.MathOperationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MathOperationTypeItemProvider mathOperationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.MathOperationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMathOperationTypeAdapter() {
		if (mathOperationTypeItemProvider == null) {
			mathOperationTypeItemProvider = new MathOperationTypeItemProvider(this);
		}

		return mathOperationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.MathOperationType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MathOperationType1ItemProvider mathOperationType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.MathOperationType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMathOperationType1Adapter() {
		if (mathOperationType1ItemProvider == null) {
			mathOperationType1ItemProvider = new MathOperationType1ItemProvider(this);
		}

		return mathOperationType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.MessageRefSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageRefSetTypeItemProvider messageRefSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.MessageRefSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageRefSetTypeAdapter() {
		if (messageRefSetTypeItemProvider == null) {
			messageRefSetTypeItemProvider = new MessageRefSetTypeItemProvider(this);
		}

		return messageRefSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.MessageRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageRefTypeItemProvider messageRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.MessageRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageRefTypeAdapter() {
		if (messageRefTypeItemProvider == null) {
			messageRefTypeItemProvider = new MessageRefTypeItemProvider(this);
		}

		return messageRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.MessageSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageSetTypeItemProvider messageSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.MessageSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageSetTypeAdapter() {
		if (messageSetTypeItemProvider == null) {
			messageSetTypeItemProvider = new MessageSetTypeItemProvider(this);
		}

		return messageSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.MessageType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageTypeItemProvider messageTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.MessageType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageTypeAdapter() {
		if (messageTypeItemProvider == null) {
			messageTypeItemProvider = new MessageTypeItemProvider(this);
		}

		return messageTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.MetaCommandSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetaCommandSetTypeItemProvider metaCommandSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.MetaCommandSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetaCommandSetTypeAdapter() {
		if (metaCommandSetTypeItemProvider == null) {
			metaCommandSetTypeItemProvider = new MetaCommandSetTypeItemProvider(this);
		}

		return metaCommandSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.MetaCommandStepListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetaCommandStepListTypeItemProvider metaCommandStepListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.MetaCommandStepListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetaCommandStepListTypeAdapter() {
		if (metaCommandStepListTypeItemProvider == null) {
			metaCommandStepListTypeItemProvider = new MetaCommandStepListTypeItemProvider(this);
		}

		return metaCommandStepListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.MetaCommandStepType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetaCommandStepTypeItemProvider metaCommandStepTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.MetaCommandStepType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetaCommandStepTypeAdapter() {
		if (metaCommandStepTypeItemProvider == null) {
			metaCommandStepTypeItemProvider = new MetaCommandStepTypeItemProvider(this);
		}

		return metaCommandStepTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.MetaCommandType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MetaCommandTypeItemProvider metaCommandTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.MetaCommandType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMetaCommandTypeAdapter() {
		if (metaCommandTypeItemProvider == null) {
			metaCommandTypeItemProvider = new MetaCommandTypeItemProvider(this);
		}

		return metaCommandTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.NameDescriptionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NameDescriptionTypeItemProvider nameDescriptionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.NameDescriptionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNameDescriptionTypeAdapter() {
		if (nameDescriptionTypeItemProvider == null) {
			nameDescriptionTypeItemProvider = new NameDescriptionTypeItemProvider(this);
		}

		return nameDescriptionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.NoteSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NoteSetTypeItemProvider noteSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.NoteSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNoteSetTypeAdapter() {
		if (noteSetTypeItemProvider == null) {
			noteSetTypeItemProvider = new NoteSetTypeItemProvider(this);
		}

		return noteSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.NumberFormatType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumberFormatTypeItemProvider numberFormatTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.NumberFormatType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumberFormatTypeAdapter() {
		if (numberFormatTypeItemProvider == null) {
			numberFormatTypeItemProvider = new NumberFormatTypeItemProvider(this);
		}

		return numberFormatTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.NumberToStringType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumberToStringTypeItemProvider numberToStringTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.NumberToStringType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumberToStringTypeAdapter() {
		if (numberToStringTypeItemProvider == null) {
			numberToStringTypeItemProvider = new NumberToStringTypeItemProvider(this);
		}

		return numberToStringTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.NumericAlarmConditionType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumericAlarmConditionTypeItemProvider numericAlarmConditionTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.NumericAlarmConditionType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumericAlarmConditionTypeAdapter() {
		if (numericAlarmConditionTypeItemProvider == null) {
			numericAlarmConditionTypeItemProvider = new NumericAlarmConditionTypeItemProvider(this);
		}

		return numericAlarmConditionTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.NumericDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NumericDataTypeItemProvider numericDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.NumericDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNumericDataTypeAdapter() {
		if (numericDataTypeItemProvider == null) {
			numericDataTypeItemProvider = new NumericDataTypeItemProvider(this);
		}

		return numericDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.OffsetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OffsetTypeItemProvider offsetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.OffsetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOffsetTypeAdapter() {
		if (offsetTypeItemProvider == null) {
			offsetTypeItemProvider = new OffsetTypeItemProvider(this);
		}

		return offsetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ORedConditionsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ORedConditionsTypeItemProvider oRedConditionsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ORedConditionsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createORedConditionsTypeAdapter() {
		if (oRedConditionsTypeItemProvider == null) {
			oRedConditionsTypeItemProvider = new ORedConditionsTypeItemProvider(this);
		}

		return oRedConditionsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.OutputParameterRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputParameterRefTypeItemProvider outputParameterRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.OutputParameterRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputParameterRefTypeAdapter() {
		if (outputParameterRefTypeItemProvider == null) {
			outputParameterRefTypeItemProvider = new OutputParameterRefTypeItemProvider(this);
		}

		return outputParameterRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.OutputSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutputSetTypeItemProvider outputSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.OutputSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutputSetTypeAdapter() {
		if (outputSetTypeItemProvider == null) {
			outputSetTypeItemProvider = new OutputSetTypeItemProvider(this);
		}

		return outputSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterInstanceRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterInstanceRefTypeItemProvider parameterInstanceRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterInstanceRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterInstanceRefTypeAdapter() {
		if (parameterInstanceRefTypeItemProvider == null) {
			parameterInstanceRefTypeItemProvider = new ParameterInstanceRefTypeItemProvider(this);
		}

		return parameterInstanceRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterInstanceRefType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterInstanceRefType1ItemProvider parameterInstanceRefType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterInstanceRefType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterInstanceRefType1Adapter() {
		if (parameterInstanceRefType1ItemProvider == null) {
			parameterInstanceRefType1ItemProvider = new ParameterInstanceRefType1ItemProvider(this);
		}

		return parameterInstanceRefType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterPropertiesType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterPropertiesTypeItemProvider parameterPropertiesTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterPropertiesType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterPropertiesTypeAdapter() {
		if (parameterPropertiesTypeItemProvider == null) {
			parameterPropertiesTypeItemProvider = new ParameterPropertiesTypeItemProvider(this);
		}

		return parameterPropertiesTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterRefEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterRefEntryTypeItemProvider parameterRefEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterRefEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterRefEntryTypeAdapter() {
		if (parameterRefEntryTypeItemProvider == null) {
			parameterRefEntryTypeItemProvider = new ParameterRefEntryTypeItemProvider(this);
		}

		return parameterRefEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterRefTypeItemProvider parameterRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterRefTypeAdapter() {
		if (parameterRefTypeItemProvider == null) {
			parameterRefTypeItemProvider = new ParameterRefTypeItemProvider(this);
		}

		return parameterRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterRefType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterRefType1ItemProvider parameterRefType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterRefType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterRefType1Adapter() {
		if (parameterRefType1ItemProvider == null) {
			parameterRefType1ItemProvider = new ParameterRefType1ItemProvider(this);
		}

		return parameterRefType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterSegmentRefEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterSegmentRefEntryTypeItemProvider parameterSegmentRefEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterSegmentRefEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterSegmentRefEntryTypeAdapter() {
		if (parameterSegmentRefEntryTypeItemProvider == null) {
			parameterSegmentRefEntryTypeItemProvider = new ParameterSegmentRefEntryTypeItemProvider(this);
		}

		return parameterSegmentRefEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterSetTypeItemProvider parameterSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterSetTypeAdapter() {
		if (parameterSetTypeItemProvider == null) {
			parameterSetTypeItemProvider = new ParameterSetTypeItemProvider(this);
		}

		return parameterSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterToSetListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterToSetListTypeItemProvider parameterToSetListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterToSetListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterToSetListTypeAdapter() {
		if (parameterToSetListTypeItemProvider == null) {
			parameterToSetListTypeItemProvider = new ParameterToSetListTypeItemProvider(this);
		}

		return parameterToSetListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterToSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterToSetTypeItemProvider parameterToSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterToSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterToSetTypeAdapter() {
		if (parameterToSetTypeItemProvider == null) {
			parameterToSetTypeItemProvider = new ParameterToSetTypeItemProvider(this);
		}

		return parameterToSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterToSetType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterToSetType1ItemProvider parameterToSetType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterToSetType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterToSetType1Adapter() {
		if (parameterToSetType1ItemProvider == null) {
			parameterToSetType1ItemProvider = new ParameterToSetType1ItemProvider(this);
		}

		return parameterToSetType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterTypeItemProvider parameterTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterTypeAdapter() {
		if (parameterTypeItemProvider == null) {
			parameterTypeItemProvider = new ParameterTypeItemProvider(this);
		}

		return parameterTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterTypeSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterTypeSetTypeItemProvider parameterTypeSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterTypeSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterTypeSetTypeAdapter() {
		if (parameterTypeSetTypeItemProvider == null) {
			parameterTypeSetTypeItemProvider = new ParameterTypeSetTypeItemProvider(this);
		}

		return parameterTypeSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParameterValueChangeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterValueChangeTypeItemProvider parameterValueChangeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParameterValueChangeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterValueChangeTypeAdapter() {
		if (parameterValueChangeTypeItemProvider == null) {
			parameterValueChangeTypeItemProvider = new ParameterValueChangeTypeItemProvider(this);
		}

		return parameterValueChangeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ParityType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParityTypeItemProvider parityTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ParityType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParityTypeAdapter() {
		if (parityTypeItemProvider == null) {
			parityTypeItemProvider = new ParityTypeItemProvider(this);
		}

		return parityTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.PhysicalAddressSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhysicalAddressSetTypeItemProvider physicalAddressSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.PhysicalAddressSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPhysicalAddressSetTypeAdapter() {
		if (physicalAddressSetTypeItemProvider == null) {
			physicalAddressSetTypeItemProvider = new PhysicalAddressSetTypeItemProvider(this);
		}

		return physicalAddressSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.PhysicalAddressType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhysicalAddressTypeItemProvider physicalAddressTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.PhysicalAddressType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPhysicalAddressTypeAdapter() {
		if (physicalAddressTypeItemProvider == null) {
			physicalAddressTypeItemProvider = new PhysicalAddressTypeItemProvider(this);
		}

		return physicalAddressTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.PhysicalAddressType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PhysicalAddressType1ItemProvider physicalAddressType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.PhysicalAddressType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPhysicalAddressType1Adapter() {
		if (physicalAddressType1ItemProvider == null) {
			physicalAddressType1ItemProvider = new PhysicalAddressType1ItemProvider(this);
		}

		return physicalAddressType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.PolynomialType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PolynomialTypeItemProvider polynomialTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.PolynomialType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPolynomialTypeAdapter() {
		if (polynomialTypeItemProvider == null) {
			polynomialTypeItemProvider = new PolynomialTypeItemProvider(this);
		}

		return polynomialTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.PropertyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyTypeItemProvider propertyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.PropertyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyTypeAdapter() {
		if (propertyTypeItemProvider == null) {
			propertyTypeItemProvider = new PropertyTypeItemProvider(this);
		}

		return propertyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.QueuedVerifierType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected QueuedVerifierTypeItemProvider queuedVerifierTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.QueuedVerifierType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createQueuedVerifierTypeAdapter() {
		if (queuedVerifierTypeItemProvider == null) {
			queuedVerifierTypeItemProvider = new QueuedVerifierTypeItemProvider(this);
		}

		return queuedVerifierTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.RangeEnumerationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RangeEnumerationTypeItemProvider rangeEnumerationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.RangeEnumerationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRangeEnumerationTypeAdapter() {
		if (rangeEnumerationTypeItemProvider == null) {
			rangeEnumerationTypeItemProvider = new RangeEnumerationTypeItemProvider(this);
		}

		return rangeEnumerationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.RateInStreamSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RateInStreamSetTypeItemProvider rateInStreamSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.RateInStreamSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRateInStreamSetTypeAdapter() {
		if (rateInStreamSetTypeItemProvider == null) {
			rateInStreamSetTypeItemProvider = new RateInStreamSetTypeItemProvider(this);
		}

		return rateInStreamSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.RateInStreamType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RateInStreamTypeItemProvider rateInStreamTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.RateInStreamType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRateInStreamTypeAdapter() {
		if (rateInStreamTypeItemProvider == null) {
			rateInStreamTypeItemProvider = new RateInStreamTypeItemProvider(this);
		}

		return rateInStreamTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.RateInStreamType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RateInStreamType1ItemProvider rateInStreamType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.RateInStreamType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRateInStreamType1Adapter() {
		if (rateInStreamType1ItemProvider == null) {
			rateInStreamType1ItemProvider = new RateInStreamType1ItemProvider(this);
		}

		return rateInStreamType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ReceivedVerifierType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReceivedVerifierTypeItemProvider receivedVerifierTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ReceivedVerifierType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReceivedVerifierTypeAdapter() {
		if (receivedVerifierTypeItemProvider == null) {
			receivedVerifierTypeItemProvider = new ReceivedVerifierTypeItemProvider(this);
		}

		return receivedVerifierTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ReferenceTimeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ReferenceTimeTypeItemProvider referenceTimeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ReferenceTimeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createReferenceTimeTypeAdapter() {
		if (referenceTimeTypeItemProvider == null) {
			referenceTimeTypeItemProvider = new ReferenceTimeTypeItemProvider(this);
		}

		return referenceTimeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.RelativeTimeDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelativeTimeDataTypeItemProvider relativeTimeDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.RelativeTimeDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelativeTimeDataTypeAdapter() {
		if (relativeTimeDataTypeItemProvider == null) {
			relativeTimeDataTypeItemProvider = new RelativeTimeDataTypeItemProvider(this);
		}

		return relativeTimeDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.RepeatType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RepeatTypeItemProvider repeatTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.RepeatType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRepeatTypeAdapter() {
		if (repeatTypeItemProvider == null) {
			repeatTypeItemProvider = new RepeatTypeItemProvider(this);
		}

		return repeatTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.RestrictionCriteriaType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RestrictionCriteriaTypeItemProvider restrictionCriteriaTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.RestrictionCriteriaType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRestrictionCriteriaTypeAdapter() {
		if (restrictionCriteriaTypeItemProvider == null) {
			restrictionCriteriaTypeItemProvider = new RestrictionCriteriaTypeItemProvider(this);
		}

		return restrictionCriteriaTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.RestrictionCriteriaType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RestrictionCriteriaType1ItemProvider restrictionCriteriaType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.RestrictionCriteriaType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRestrictionCriteriaType1Adapter() {
		if (restrictionCriteriaType1ItemProvider == null) {
			restrictionCriteriaType1ItemProvider = new RestrictionCriteriaType1ItemProvider(this);
		}

		return restrictionCriteriaType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SentFromRangeVerifierType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SentFromRangeVerifierTypeItemProvider sentFromRangeVerifierTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SentFromRangeVerifierType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSentFromRangeVerifierTypeAdapter() {
		if (sentFromRangeVerifierTypeItemProvider == null) {
			sentFromRangeVerifierTypeItemProvider = new SentFromRangeVerifierTypeItemProvider(this);
		}

		return sentFromRangeVerifierTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SequenceContainerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SequenceContainerTypeItemProvider sequenceContainerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SequenceContainerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSequenceContainerTypeAdapter() {
		if (sequenceContainerTypeItemProvider == null) {
			sequenceContainerTypeItemProvider = new SequenceContainerTypeItemProvider(this);
		}

		return sequenceContainerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SequenceEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SequenceEntryTypeItemProvider sequenceEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SequenceEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSequenceEntryTypeAdapter() {
		if (sequenceEntryTypeItemProvider == null) {
			sequenceEntryTypeItemProvider = new SequenceEntryTypeItemProvider(this);
		}

		return sequenceEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ServiceRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceRefTypeItemProvider serviceRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ServiceRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceRefTypeAdapter() {
		if (serviceRefTypeItemProvider == null) {
			serviceRefTypeItemProvider = new ServiceRefTypeItemProvider(this);
		}

		return serviceRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ServiceSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceSetTypeItemProvider serviceSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ServiceSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceSetTypeAdapter() {
		if (serviceSetTypeItemProvider == null) {
			serviceSetTypeItemProvider = new ServiceSetTypeItemProvider(this);
		}

		return serviceSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ServiceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ServiceTypeItemProvider serviceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ServiceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createServiceTypeAdapter() {
		if (serviceTypeItemProvider == null) {
			serviceTypeItemProvider = new ServiceTypeItemProvider(this);
		}

		return serviceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SignificanceType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SignificanceTypeItemProvider significanceTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SignificanceType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSignificanceTypeAdapter() {
		if (significanceTypeItemProvider == null) {
			significanceTypeItemProvider = new SignificanceTypeItemProvider(this);
		}

		return significanceTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SimpleAlgorithmType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleAlgorithmTypeItemProvider simpleAlgorithmTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SimpleAlgorithmType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleAlgorithmTypeAdapter() {
		if (simpleAlgorithmTypeItemProvider == null) {
			simpleAlgorithmTypeItemProvider = new SimpleAlgorithmTypeItemProvider(this);
		}

		return simpleAlgorithmTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SizeInBitsType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SizeInBitsTypeItemProvider sizeInBitsTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SizeInBitsType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSizeInBitsTypeAdapter() {
		if (sizeInBitsTypeItemProvider == null) {
			sizeInBitsTypeItemProvider = new SizeInBitsTypeItemProvider(this);
		}

		return sizeInBitsTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SpaceSystemType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpaceSystemTypeItemProvider spaceSystemTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SpaceSystemType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpaceSystemTypeAdapter() {
		if (spaceSystemTypeItemProvider == null) {
			spaceSystemTypeItemProvider = new SpaceSystemTypeItemProvider(this);
		}

		return spaceSystemTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SplineCalibratorType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SplineCalibratorTypeItemProvider splineCalibratorTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SplineCalibratorType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSplineCalibratorTypeAdapter() {
		if (splineCalibratorTypeItemProvider == null) {
			splineCalibratorTypeItemProvider = new SplineCalibratorTypeItemProvider(this);
		}

		return splineCalibratorTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SplinePointType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SplinePointTypeItemProvider splinePointTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SplinePointType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSplinePointTypeAdapter() {
		if (splinePointTypeItemProvider == null) {
			splinePointTypeItemProvider = new SplinePointTypeItemProvider(this);
		}

		return splinePointTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.StreamRefType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StreamRefTypeItemProvider streamRefTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.StreamRefType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStreamRefTypeAdapter() {
		if (streamRefTypeItemProvider == null) {
			streamRefTypeItemProvider = new StreamRefTypeItemProvider(this);
		}

		return streamRefTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.StreamSegmentEntryType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StreamSegmentEntryTypeItemProvider streamSegmentEntryTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.StreamSegmentEntryType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStreamSegmentEntryTypeAdapter() {
		if (streamSegmentEntryTypeItemProvider == null) {
			streamSegmentEntryTypeItemProvider = new StreamSegmentEntryTypeItemProvider(this);
		}

		return streamSegmentEntryTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.StreamSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StreamSetTypeItemProvider streamSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.StreamSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStreamSetTypeAdapter() {
		if (streamSetTypeItemProvider == null) {
			streamSetTypeItemProvider = new StreamSetTypeItemProvider(this);
		}

		return streamSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.StringDataEncodingType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringDataEncodingTypeItemProvider stringDataEncodingTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.StringDataEncodingType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringDataEncodingTypeAdapter() {
		if (stringDataEncodingTypeItemProvider == null) {
			stringDataEncodingTypeItemProvider = new StringDataEncodingTypeItemProvider(this);
		}

		return stringDataEncodingTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.StringDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringDataTypeItemProvider stringDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.StringDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringDataTypeAdapter() {
		if (stringDataTypeItemProvider == null) {
			stringDataTypeItemProvider = new StringDataTypeItemProvider(this);
		}

		return stringDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SyncPatternType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SyncPatternTypeItemProvider syncPatternTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SyncPatternType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSyncPatternTypeAdapter() {
		if (syncPatternTypeItemProvider == null) {
			syncPatternTypeItemProvider = new SyncPatternTypeItemProvider(this);
		}

		return syncPatternTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SyncPatternType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SyncPatternType1ItemProvider syncPatternType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SyncPatternType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSyncPatternType1Adapter() {
		if (syncPatternType1ItemProvider == null) {
			syncPatternType1ItemProvider = new SyncPatternType1ItemProvider(this);
		}

		return syncPatternType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SyncStrategyType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SyncStrategyTypeItemProvider syncStrategyTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SyncStrategyType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSyncStrategyTypeAdapter() {
		if (syncStrategyTypeItemProvider == null) {
			syncStrategyTypeItemProvider = new SyncStrategyTypeItemProvider(this);
		}

		return syncStrategyTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SyncStrategyType1} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SyncStrategyType1ItemProvider syncStrategyType1ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SyncStrategyType1}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSyncStrategyType1Adapter() {
		if (syncStrategyType1ItemProvider == null) {
			syncStrategyType1ItemProvider = new SyncStrategyType1ItemProvider(this);
		}

		return syncStrategyType1ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.SyncStrategyType2} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SyncStrategyType2ItemProvider syncStrategyType2ItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.SyncStrategyType2}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSyncStrategyType2Adapter() {
		if (syncStrategyType2ItemProvider == null) {
			syncStrategyType2ItemProvider = new SyncStrategyType2ItemProvider(this);
		}

		return syncStrategyType2ItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.TelemetryMetaDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TelemetryMetaDataTypeItemProvider telemetryMetaDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.TelemetryMetaDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTelemetryMetaDataTypeAdapter() {
		if (telemetryMetaDataTypeItemProvider == null) {
			telemetryMetaDataTypeItemProvider = new TelemetryMetaDataTypeItemProvider(this);
		}

		return telemetryMetaDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.TermType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TermTypeItemProvider termTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.TermType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTermTypeAdapter() {
		if (termTypeItemProvider == null) {
			termTypeItemProvider = new TermTypeItemProvider(this);
		}

		return termTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.TimeAssociationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TimeAssociationTypeItemProvider timeAssociationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.TimeAssociationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTimeAssociationTypeAdapter() {
		if (timeAssociationTypeItemProvider == null) {
			timeAssociationTypeItemProvider = new TimeAssociationTypeItemProvider(this);
		}

		return timeAssociationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.TransferredToRangeVerifierType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransferredToRangeVerifierTypeItemProvider transferredToRangeVerifierTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.TransferredToRangeVerifierType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransferredToRangeVerifierTypeAdapter() {
		if (transferredToRangeVerifierTypeItemProvider == null) {
			transferredToRangeVerifierTypeItemProvider = new TransferredToRangeVerifierTypeItemProvider(this);
		}

		return transferredToRangeVerifierTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.TransmissionConstraintListType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransmissionConstraintListTypeItemProvider transmissionConstraintListTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.TransmissionConstraintListType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransmissionConstraintListTypeAdapter() {
		if (transmissionConstraintListTypeItemProvider == null) {
			transmissionConstraintListTypeItemProvider = new TransmissionConstraintListTypeItemProvider(this);
		}

		return transmissionConstraintListTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.TransmissionConstraintType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransmissionConstraintTypeItemProvider transmissionConstraintTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.TransmissionConstraintType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransmissionConstraintTypeAdapter() {
		if (transmissionConstraintTypeItemProvider == null) {
			transmissionConstraintTypeItemProvider = new TransmissionConstraintTypeItemProvider(this);
		}

		return transmissionConstraintTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.TriggerType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TriggerTypeItemProvider triggerTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.TriggerType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTriggerTypeAdapter() {
		if (triggerTypeItemProvider == null) {
			triggerTypeItemProvider = new TriggerTypeItemProvider(this);
		}

		return triggerTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.UnitSetType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitSetTypeItemProvider unitSetTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.UnitSetType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitSetTypeAdapter() {
		if (unitSetTypeItemProvider == null) {
			unitSetTypeItemProvider = new UnitSetTypeItemProvider(this);
		}

		return unitSetTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.UnitType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnitTypeItemProvider unitTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.UnitType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnitTypeAdapter() {
		if (unitTypeItemProvider == null) {
			unitTypeItemProvider = new UnitTypeItemProvider(this);
		}

		return unitTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ValidRangeType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValidRangeTypeItemProvider validRangeTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ValidRangeType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValidRangeTypeAdapter() {
		if (validRangeTypeItemProvider == null) {
			validRangeTypeItemProvider = new ValidRangeTypeItemProvider(this);
		}

		return validRangeTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.ValueEnumerationType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValueEnumerationTypeItemProvider valueEnumerationTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.ValueEnumerationType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValueEnumerationTypeAdapter() {
		if (valueEnumerationTypeItemProvider == null) {
			valueEnumerationTypeItemProvider = new ValueEnumerationTypeItemProvider(this);
		}

		return valueEnumerationTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.VariableFrameStreamType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableFrameStreamTypeItemProvider variableFrameStreamTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.VariableFrameStreamType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableFrameStreamTypeAdapter() {
		if (variableFrameStreamTypeItemProvider == null) {
			variableFrameStreamTypeItemProvider = new VariableFrameStreamTypeItemProvider(this);
		}

		return variableFrameStreamTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.omg.space.xtce.VerifiersType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VerifiersTypeItemProvider verifiersTypeItemProvider;

	/**
	 * This creates an adapter for a {@link org.omg.space.xtce.VerifiersType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVerifiersTypeAdapter() {
		if (verifiersTypeItemProvider == null) {
			verifiersTypeItemProvider = new VerifiersTypeItemProvider(this);
		}

		return verifiersTypeItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (absoluteTimeDataTypeItemProvider != null) absoluteTimeDataTypeItemProvider.dispose();
		if (acceptedVerifierTypeItemProvider != null) acceptedVerifierTypeItemProvider.dispose();
		if (alarmConditionsTypeItemProvider != null) alarmConditionsTypeItemProvider.dispose();
		if (alarmRangesTypeItemProvider != null) alarmRangesTypeItemProvider.dispose();
		if (algorithmSetTypeItemProvider != null) algorithmSetTypeItemProvider.dispose();
		if (algorithmTextTypeItemProvider != null) algorithmTextTypeItemProvider.dispose();
		if (aliasSetTypeItemProvider != null) aliasSetTypeItemProvider.dispose();
		if (aliasTypeItemProvider != null) aliasTypeItemProvider.dispose();
		if (anDedConditionsTypeItemProvider != null) anDedConditionsTypeItemProvider.dispose();
		if (argumementArrayTypeTypeItemProvider != null) argumementArrayTypeTypeItemProvider.dispose();
		if (argumentAssignmentListTypeItemProvider != null) argumentAssignmentListTypeItemProvider.dispose();
		if (argumentAssignmentTypeItemProvider != null) argumentAssignmentTypeItemProvider.dispose();
		if (argumentListTypeItemProvider != null) argumentListTypeItemProvider.dispose();
		if (argumentListType1ItemProvider != null) argumentListType1ItemProvider.dispose();
		if (argumentRefEntryTypeItemProvider != null) argumentRefEntryTypeItemProvider.dispose();
		if (argumentTypeItemProvider != null) argumentTypeItemProvider.dispose();
		if (argumentType1ItemProvider != null) argumentType1ItemProvider.dispose();
		if (argumentTypeSetTypeItemProvider != null) argumentTypeSetTypeItemProvider.dispose();
		if (arrayParameterRefEntryTypeItemProvider != null) arrayParameterRefEntryTypeItemProvider.dispose();
		if (arrayParameterTypeTypeItemProvider != null) arrayParameterTypeTypeItemProvider.dispose();
		if (authorSetTypeItemProvider != null) authorSetTypeItemProvider.dispose();
		if (autoInvertTypeItemProvider != null) autoInvertTypeItemProvider.dispose();
		if (baseContainerTypeItemProvider != null) baseContainerTypeItemProvider.dispose();
		if (baseContainerType1ItemProvider != null) baseContainerType1ItemProvider.dispose();
		if (baseMetaCommandTypeItemProvider != null) baseMetaCommandTypeItemProvider.dispose();
		if (binaryDataEncodingTypeItemProvider != null) binaryDataEncodingTypeItemProvider.dispose();
		if (binaryDataTypeItemProvider != null) binaryDataTypeItemProvider.dispose();
		if (blockMetaCommandTypeItemProvider != null) blockMetaCommandTypeItemProvider.dispose();
		if (booleanDataTypeItemProvider != null) booleanDataTypeItemProvider.dispose();
		if (booleanExpressionTypeItemProvider != null) booleanExpressionTypeItemProvider.dispose();
		if (byteOrderTypeItemProvider != null) byteOrderTypeItemProvider.dispose();
		if (byteTypeItemProvider != null) byteTypeItemProvider.dispose();
		if (calibratorTypeItemProvider != null) calibratorTypeItemProvider.dispose();
		if (changeTypeItemProvider != null) changeTypeItemProvider.dispose();
		if (commandContainerEntryListTypeItemProvider != null) commandContainerEntryListTypeItemProvider.dispose();
		if (commandContainerSetTypeItemProvider != null) commandContainerSetTypeItemProvider.dispose();
		if (commandContainerTypeItemProvider != null) commandContainerTypeItemProvider.dispose();
		if (commandMetaDataTypeItemProvider != null) commandMetaDataTypeItemProvider.dispose();
		if (commandVerifierTypeItemProvider != null) commandVerifierTypeItemProvider.dispose();
		if (comparisonCheckTypeItemProvider != null) comparisonCheckTypeItemProvider.dispose();
		if (comparisonListTypeItemProvider != null) comparisonListTypeItemProvider.dispose();
		if (comparisonListType1ItemProvider != null) comparisonListType1ItemProvider.dispose();
		if (comparisonTypeItemProvider != null) comparisonTypeItemProvider.dispose();
		if (completeVerifierTypeItemProvider != null) completeVerifierTypeItemProvider.dispose();
		if (conditionalAlarmTypeItemProvider != null) conditionalAlarmTypeItemProvider.dispose();
		if (constantTypeItemProvider != null) constantTypeItemProvider.dispose();
		if (containerRefEntryTypeItemProvider != null) containerRefEntryTypeItemProvider.dispose();
		if (containerRefSetTypeItemProvider != null) containerRefSetTypeItemProvider.dispose();
		if (containerRefTypeItemProvider != null) containerRefTypeItemProvider.dispose();
		if (containerSegmentRefEntryTypeItemProvider != null) containerSegmentRefEntryTypeItemProvider.dispose();
		if (containerSetTypeItemProvider != null) containerSetTypeItemProvider.dispose();
		if (contextAlarmListTypeItemProvider != null) contextAlarmListTypeItemProvider.dispose();
		if (contextAlarmListType1ItemProvider != null) contextAlarmListType1ItemProvider.dispose();
		if (contextAlarmListType2ItemProvider != null) contextAlarmListType2ItemProvider.dispose();
		if (contextAlarmListType3ItemProvider != null) contextAlarmListType3ItemProvider.dispose();
		if (contextAlarmTypeItemProvider != null) contextAlarmTypeItemProvider.dispose();
		if (contextCalibratorListTypeItemProvider != null) contextCalibratorListTypeItemProvider.dispose();
		if (contextCalibratorListType1ItemProvider != null) contextCalibratorListType1ItemProvider.dispose();
		if (contextCalibratorListType2ItemProvider != null) contextCalibratorListType2ItemProvider.dispose();
		if (contextCalibratorListType3ItemProvider != null) contextCalibratorListType3ItemProvider.dispose();
		if (contextCalibratorListType4ItemProvider != null) contextCalibratorListType4ItemProvider.dispose();
		if (contextCalibratorTypeItemProvider != null) contextCalibratorTypeItemProvider.dispose();
		if (contextCalibratorType1ItemProvider != null) contextCalibratorType1ItemProvider.dispose();
		if (contextCalibratorType2ItemProvider != null) contextCalibratorType2ItemProvider.dispose();
		if (contextCalibratorType3ItemProvider != null) contextCalibratorType3ItemProvider.dispose();
		if (contextSignificanceListTypeItemProvider != null) contextSignificanceListTypeItemProvider.dispose();
		if (contextSignificanceTypeItemProvider != null) contextSignificanceTypeItemProvider.dispose();
		if (crcTypeItemProvider != null) crcTypeItemProvider.dispose();
		if (customStreamTypeItemProvider != null) customStreamTypeItemProvider.dispose();
		if (dataEncodingTypeItemProvider != null) dataEncodingTypeItemProvider.dispose();
		if (decimalRangeTypeItemProvider != null) decimalRangeTypeItemProvider.dispose();
		if (decimalValueTypeItemProvider != null) decimalValueTypeItemProvider.dispose();
		if (defaultsTypeItemProvider != null) defaultsTypeItemProvider.dispose();
		if (dimensionListTypeItemProvider != null) dimensionListTypeItemProvider.dispose();
		if (dimensionTypeItemProvider != null) dimensionTypeItemProvider.dispose();
		if (discreteLookupListTypeItemProvider != null) discreteLookupListTypeItemProvider.dispose();
		if (discreteLookupTypeItemProvider != null) discreteLookupTypeItemProvider.dispose();
		if (documentRootItemProvider != null) documentRootItemProvider.dispose();
		if (dynamicValueTypeItemProvider != null) dynamicValueTypeItemProvider.dispose();
		if (dynamicValueType1ItemProvider != null) dynamicValueType1ItemProvider.dispose();
		if (encodingType1ItemProvider != null) encodingType1ItemProvider.dispose();
		if (entryListTypeItemProvider != null) entryListTypeItemProvider.dispose();
		if (enumeratedDataTypeItemProvider != null) enumeratedDataTypeItemProvider.dispose();
		if (enumerationListTypeItemProvider != null) enumerationListTypeItemProvider.dispose();
		if (errorDetectCorrectTypeItemProvider != null) errorDetectCorrectTypeItemProvider.dispose();
		if (executionVerifierTypeItemProvider != null) executionVerifierTypeItemProvider.dispose();
		if (externalAlgorithmSetTypeItemProvider != null) externalAlgorithmSetTypeItemProvider.dispose();
		if (externalAlgorithmTypeItemProvider != null) externalAlgorithmTypeItemProvider.dispose();
		if (fixedFrameStreamTypeItemProvider != null) fixedFrameStreamTypeItemProvider.dispose();
		if (fixedFrameSyncStrategyTypeItemProvider != null) fixedFrameSyncStrategyTypeItemProvider.dispose();
		if (fixedValueEntryTypeItemProvider != null) fixedValueEntryTypeItemProvider.dispose();
		if (flagTypeItemProvider != null) flagTypeItemProvider.dispose();
		if (floatArgumentTypeTypeItemProvider != null) floatArgumentTypeTypeItemProvider.dispose();
		if (floatDataEncodingTypeItemProvider != null) floatDataEncodingTypeItemProvider.dispose();
		if (floatDataTypeItemProvider != null) floatDataTypeItemProvider.dispose();
		if (floatParameterTypeTypeItemProvider != null) floatParameterTypeTypeItemProvider.dispose();
		if (frameStreamTypeItemProvider != null) frameStreamTypeItemProvider.dispose();
		if (headerTypeItemProvider != null) headerTypeItemProvider.dispose();
		if (historySetTypeItemProvider != null) historySetTypeItemProvider.dispose();
		if (indirectParameterRefEntryTypeItemProvider != null) indirectParameterRefEntryTypeItemProvider.dispose();
		if (inputAlgorithmTypeItemProvider != null) inputAlgorithmTypeItemProvider.dispose();
		if (inputOutputAlgorithmTypeItemProvider != null) inputOutputAlgorithmTypeItemProvider.dispose();
		if (inputOutputTriggerAlgorithmTypeItemProvider != null) inputOutputTriggerAlgorithmTypeItemProvider.dispose();
		if (inputSetTypeItemProvider != null) inputSetTypeItemProvider.dispose();
		if (integerArgumentTypeTypeItemProvider != null) integerArgumentTypeTypeItemProvider.dispose();
		if (integerDataEncodingTypeItemProvider != null) integerDataEncodingTypeItemProvider.dispose();
		if (integerDataTypeItemProvider != null) integerDataTypeItemProvider.dispose();
		if (integerParameterTypeTypeItemProvider != null) integerParameterTypeTypeItemProvider.dispose();
		if (integerRangeTypeItemProvider != null) integerRangeTypeItemProvider.dispose();
		if (integerValueTypeItemProvider != null) integerValueTypeItemProvider.dispose();
		if (interlockTypeItemProvider != null) interlockTypeItemProvider.dispose();
		if (leadingSizeTypeItemProvider != null) leadingSizeTypeItemProvider.dispose();
		if (linearAdjustmentTypeItemProvider != null) linearAdjustmentTypeItemProvider.dispose();
		if (linearAdjustmentType1ItemProvider != null) linearAdjustmentType1ItemProvider.dispose();
		if (locationInContainerInBitsTypeItemProvider != null) locationInContainerInBitsTypeItemProvider.dispose();
		if (matchCriteriaTypeItemProvider != null) matchCriteriaTypeItemProvider.dispose();
		if (mathAlgorithmTypeItemProvider != null) mathAlgorithmTypeItemProvider.dispose();
		if (mathOperationTypeItemProvider != null) mathOperationTypeItemProvider.dispose();
		if (mathOperationType1ItemProvider != null) mathOperationType1ItemProvider.dispose();
		if (messageRefSetTypeItemProvider != null) messageRefSetTypeItemProvider.dispose();
		if (messageRefTypeItemProvider != null) messageRefTypeItemProvider.dispose();
		if (messageSetTypeItemProvider != null) messageSetTypeItemProvider.dispose();
		if (messageTypeItemProvider != null) messageTypeItemProvider.dispose();
		if (metaCommandSetTypeItemProvider != null) metaCommandSetTypeItemProvider.dispose();
		if (metaCommandStepListTypeItemProvider != null) metaCommandStepListTypeItemProvider.dispose();
		if (metaCommandStepTypeItemProvider != null) metaCommandStepTypeItemProvider.dispose();
		if (metaCommandTypeItemProvider != null) metaCommandTypeItemProvider.dispose();
		if (nameDescriptionTypeItemProvider != null) nameDescriptionTypeItemProvider.dispose();
		if (noteSetTypeItemProvider != null) noteSetTypeItemProvider.dispose();
		if (numberFormatTypeItemProvider != null) numberFormatTypeItemProvider.dispose();
		if (numberToStringTypeItemProvider != null) numberToStringTypeItemProvider.dispose();
		if (numericAlarmConditionTypeItemProvider != null) numericAlarmConditionTypeItemProvider.dispose();
		if (numericDataTypeItemProvider != null) numericDataTypeItemProvider.dispose();
		if (offsetTypeItemProvider != null) offsetTypeItemProvider.dispose();
		if (oRedConditionsTypeItemProvider != null) oRedConditionsTypeItemProvider.dispose();
		if (outputParameterRefTypeItemProvider != null) outputParameterRefTypeItemProvider.dispose();
		if (outputSetTypeItemProvider != null) outputSetTypeItemProvider.dispose();
		if (parameterInstanceRefTypeItemProvider != null) parameterInstanceRefTypeItemProvider.dispose();
		if (parameterInstanceRefType1ItemProvider != null) parameterInstanceRefType1ItemProvider.dispose();
		if (parameterPropertiesTypeItemProvider != null) parameterPropertiesTypeItemProvider.dispose();
		if (parameterRefEntryTypeItemProvider != null) parameterRefEntryTypeItemProvider.dispose();
		if (parameterRefTypeItemProvider != null) parameterRefTypeItemProvider.dispose();
		if (parameterRefType1ItemProvider != null) parameterRefType1ItemProvider.dispose();
		if (parameterSegmentRefEntryTypeItemProvider != null) parameterSegmentRefEntryTypeItemProvider.dispose();
		if (parameterSetTypeItemProvider != null) parameterSetTypeItemProvider.dispose();
		if (parameterToSetListTypeItemProvider != null) parameterToSetListTypeItemProvider.dispose();
		if (parameterToSetTypeItemProvider != null) parameterToSetTypeItemProvider.dispose();
		if (parameterToSetType1ItemProvider != null) parameterToSetType1ItemProvider.dispose();
		if (parameterTypeItemProvider != null) parameterTypeItemProvider.dispose();
		if (parameterTypeSetTypeItemProvider != null) parameterTypeSetTypeItemProvider.dispose();
		if (parameterValueChangeTypeItemProvider != null) parameterValueChangeTypeItemProvider.dispose();
		if (parityTypeItemProvider != null) parityTypeItemProvider.dispose();
		if (physicalAddressSetTypeItemProvider != null) physicalAddressSetTypeItemProvider.dispose();
		if (physicalAddressTypeItemProvider != null) physicalAddressTypeItemProvider.dispose();
		if (physicalAddressType1ItemProvider != null) physicalAddressType1ItemProvider.dispose();
		if (polynomialTypeItemProvider != null) polynomialTypeItemProvider.dispose();
		if (propertyTypeItemProvider != null) propertyTypeItemProvider.dispose();
		if (queuedVerifierTypeItemProvider != null) queuedVerifierTypeItemProvider.dispose();
		if (rangeEnumerationTypeItemProvider != null) rangeEnumerationTypeItemProvider.dispose();
		if (rateInStreamSetTypeItemProvider != null) rateInStreamSetTypeItemProvider.dispose();
		if (rateInStreamTypeItemProvider != null) rateInStreamTypeItemProvider.dispose();
		if (rateInStreamType1ItemProvider != null) rateInStreamType1ItemProvider.dispose();
		if (receivedVerifierTypeItemProvider != null) receivedVerifierTypeItemProvider.dispose();
		if (referenceTimeTypeItemProvider != null) referenceTimeTypeItemProvider.dispose();
		if (relativeTimeDataTypeItemProvider != null) relativeTimeDataTypeItemProvider.dispose();
		if (repeatTypeItemProvider != null) repeatTypeItemProvider.dispose();
		if (restrictionCriteriaTypeItemProvider != null) restrictionCriteriaTypeItemProvider.dispose();
		if (restrictionCriteriaType1ItemProvider != null) restrictionCriteriaType1ItemProvider.dispose();
		if (sentFromRangeVerifierTypeItemProvider != null) sentFromRangeVerifierTypeItemProvider.dispose();
		if (sequenceContainerTypeItemProvider != null) sequenceContainerTypeItemProvider.dispose();
		if (sequenceEntryTypeItemProvider != null) sequenceEntryTypeItemProvider.dispose();
		if (serviceRefTypeItemProvider != null) serviceRefTypeItemProvider.dispose();
		if (serviceSetTypeItemProvider != null) serviceSetTypeItemProvider.dispose();
		if (serviceTypeItemProvider != null) serviceTypeItemProvider.dispose();
		if (significanceTypeItemProvider != null) significanceTypeItemProvider.dispose();
		if (simpleAlgorithmTypeItemProvider != null) simpleAlgorithmTypeItemProvider.dispose();
		if (sizeInBitsTypeItemProvider != null) sizeInBitsTypeItemProvider.dispose();
		if (spaceSystemTypeItemProvider != null) spaceSystemTypeItemProvider.dispose();
		if (splineCalibratorTypeItemProvider != null) splineCalibratorTypeItemProvider.dispose();
		if (splinePointTypeItemProvider != null) splinePointTypeItemProvider.dispose();
		if (streamRefTypeItemProvider != null) streamRefTypeItemProvider.dispose();
		if (streamSegmentEntryTypeItemProvider != null) streamSegmentEntryTypeItemProvider.dispose();
		if (streamSetTypeItemProvider != null) streamSetTypeItemProvider.dispose();
		if (stringDataEncodingTypeItemProvider != null) stringDataEncodingTypeItemProvider.dispose();
		if (stringDataTypeItemProvider != null) stringDataTypeItemProvider.dispose();
		if (syncPatternTypeItemProvider != null) syncPatternTypeItemProvider.dispose();
		if (syncPatternType1ItemProvider != null) syncPatternType1ItemProvider.dispose();
		if (syncStrategyTypeItemProvider != null) syncStrategyTypeItemProvider.dispose();
		if (syncStrategyType1ItemProvider != null) syncStrategyType1ItemProvider.dispose();
		if (syncStrategyType2ItemProvider != null) syncStrategyType2ItemProvider.dispose();
		if (telemetryMetaDataTypeItemProvider != null) telemetryMetaDataTypeItemProvider.dispose();
		if (termTypeItemProvider != null) termTypeItemProvider.dispose();
		if (timeAssociationTypeItemProvider != null) timeAssociationTypeItemProvider.dispose();
		if (transferredToRangeVerifierTypeItemProvider != null) transferredToRangeVerifierTypeItemProvider.dispose();
		if (transmissionConstraintListTypeItemProvider != null) transmissionConstraintListTypeItemProvider.dispose();
		if (transmissionConstraintTypeItemProvider != null) transmissionConstraintTypeItemProvider.dispose();
		if (triggerTypeItemProvider != null) triggerTypeItemProvider.dispose();
		if (unitSetTypeItemProvider != null) unitSetTypeItemProvider.dispose();
		if (unitTypeItemProvider != null) unitTypeItemProvider.dispose();
		if (validRangeTypeItemProvider != null) validRangeTypeItemProvider.dispose();
		if (valueEnumerationTypeItemProvider != null) valueEnumerationTypeItemProvider.dispose();
		if (variableFrameStreamTypeItemProvider != null) variableFrameStreamTypeItemProvider.dispose();
		if (verifiersTypeItemProvider != null) verifiersTypeItemProvider.dispose();
	}

}
